name: Comprehensive Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, ready_for_review]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run unit tests
        run: |
          uv run python tests/run_all_tests.py --category unit --verbosity 2

      - name: Upload unit test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: tests/unit/*/vis_test_output/
          retention-days: 3

  fast-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run fast tests
        run: |
          uv run python tests/run_all_tests.py --category fast --verbosity 2

  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run integration tests
        run: |
          uv run python tests/run_all_tests.py --category integration --verbosity 2

  slow-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (!github.event.pull_request.draft)
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run slow tests (SBI inference)
        run: |
          uv run python tests/run_all_tests.py --category slow --verbosity 1
        timeout-minutes: 30

      - name: Upload slow test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: slow-test-results
          path: tests/e2e/*/results/
          retention-days: 5

  e2e-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (!github.event.pull_request.draft)
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run end-to-end tests
        run: |
          uv run python tests/run_all_tests.py --category e2e --verbosity 1
        timeout-minutes: 45

  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.12"

      - name: Install the project with coverage
        run: |
          uv sync --locked --all-extras --dev
          uv add --dev coverage[toml]

      - name: Run tests with coverage
        run: |
          uv run coverage run -m pytest tests/unit tests/integration -v
          uv run coverage report --show-missing
          uv run coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  multi-platform-test:
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run fast tests only (multi-platform)
        run: |
          uv run python tests/run_all_tests.py --category fast --verbosity 1

  test-summary:
    runs-on: ubuntu-latest
    needs: [unit-tests, fast-tests, integration-tests, slow-tests, e2e-tests]
    if: always()
    
    steps:
      - name: Test Summary
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Test Category | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests | ${{ needs.unit-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Fast Tests | ${{ needs.fast-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Integration Tests | ${{ needs.integration-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Slow Tests | ${{ needs.slow-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| E2E Tests | ${{ needs.e2e-tests.result }} |" >> $GITHUB_STEP_SUMMARY